{"version":3,"sources":["player1.png","player2.png","player3.png","player4.png","board.jpg","Card.tsx","Game.tsx","NewGame.tsx","GameOver.tsx","constants_funcs.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DrawnCard","props","card","count","type","startsWith","split","color","children","cardBlock","i","push","key","className","Game","gameOver","to","myTurn","player","currentPlayer","src","board","alt","width","disabled","winner","onClick","drawCard","players","name","position","selectedCard","style","display","playerCount","player1","id","player2","player3","player4","NewGame","useState","playersReady","setPlayersReady","_setPlayerCount","setPlayers","updatePlayers","e","_players","concat","currentTarget","value","onChange","parseInt","target","setPlayerCount","GameOver","setGameOver","boardMatrix","top","left","jumpTo","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","movePlayerOnScreen","playerIndex","el","document","getElementById","App","gameCards","forEach","double","createDeck","setWinner","deck","setDeck","setCurrentPlayer","_setPlayers","setPlayerCard","fallbackPosition","newSquare","currentPlayersCard","cardType","numberOfMoves","startSearchPosition","setTimeout","square","movePlayer","nextPlayer","href","basename","process","exact","path","names","console","log","tmpDeck","splice","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d48d7ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/player1.5bbf3e1a.png\";","module.exports = __webpack_public_path__ + \"static/media/player2.5f5aa454.png\";","module.exports = __webpack_public_path__ + \"static/media/player3.d9765818.png\";","module.exports = __webpack_public_path__ + \"static/media/player4.8d207f25.png\";","module.exports = __webpack_public_path__ + \"static/media/board.e5b987bc.jpg\";","import React, { ReactChild } from 'react';\r\nimport { Card, CardType } from './constants_funcs';\r\n\r\nexport interface CurrentCardProps {\r\n    card: Card,\r\n    children?: ReactChild;\r\n}\r\n\r\nconst DrawnCard: React.FC<CurrentCardProps> = (props) => {\r\n    if (!props.card) { return (<div></div>); }\r\n    \r\n    let count = 1;\r\n    let type = props.card.type;\r\n\r\n    if (type.startsWith(\"double\")) {\r\n        type = type.split('double-')[1] as CardType;\r\n        count++;\r\n    }\r\n\r\n    function cardBlock(color: string, count = 1) {\r\n        const children: ReactChild[] = [];\r\n        const cardBlock: string = `block-${color}`;\r\n        for (let i=0; i<count; i++) {\r\n            children.push((<span key={i} className={cardBlock}></span>))\r\n        }\r\n        return (<div className=\"card\">{children}</div>);\r\n    }\r\n\r\n\r\n    return props.card\r\n        ? (cardBlock(type, count))\r\n        : (<></>);\r\n};\r\n\r\nexport default DrawnCard;","import React, { ReactChild } from 'react';\r\nimport player1 from './player1.png';\r\nimport player2 from './player2.png';\r\nimport player3 from './player3.png';\r\nimport player4 from './player4.png';\r\nimport board from './board.jpg';\r\nimport DrawnCard from './Card';\r\nimport { Redirect } from 'react-router';\r\nimport { Player } from './constants_funcs';\r\n\r\ninterface GameProps {\r\n    currentPlayer: number,\r\n    players: Array<Player>,\r\n    drawCard: () => void,\r\n    playerCount: number,\r\n    gameOver: boolean,\r\n    winner: string,\r\n    children?: ReactChild\r\n}\r\n\r\nconst Game: React.FunctionComponent<GameProps> =\r\n    (props) => {\r\n        if (props.gameOver) {\r\n            return (<Redirect to=\"/gameover\"></Redirect>);\r\n        }\r\n\r\n        function myTurn(player: number) {\r\n            return (props.currentPlayer === player)\r\n                ? <span>👉</span> : <span></span>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"board-container\">\r\n                    <img src={board} alt=\"\" width=\"800\" />\r\n                    <div className=\"player-container\">\r\n                        <button className=\"drawCard\" disabled={props.winner !== ''} onClick={props.drawCard}>🎴 Draw Card</button>\r\n                        <div className=\"player-card\">\r\n                            <h2 className=\"player1color\">\r\n                                {myTurn(0)}\r\n                                {props.players[0].name} (Square {props.players[0].position + 1})</h2>\r\n                            <DrawnCard card={props.players[0].selectedCard}></DrawnCard>\r\n                        </div>\r\n                        <div className=\"player-card\">\r\n                            <h2 className=\"player2color\">\r\n                                {myTurn(1)}\r\n                                {props.players[1].name} (Square {props.players[1].position + 1})</h2>\r\n                            <DrawnCard card={props.players[1].selectedCard}></DrawnCard>\r\n                        </div>\r\n                        <div className=\"player-card\" style={{ display: props.playerCount > 2 ? \"block\" : \"none\" }}>\r\n                            <h2 className=\"player3color\">\r\n                                {myTurn(2)}\r\n                                {props.players[2].name} (Square {props.players[2].position + 1})</h2>\r\n                            <DrawnCard card={props.players[2].selectedCard}></DrawnCard>\r\n                        </div>\r\n                        <div className=\"player-card\" style={{ display: props.playerCount > 3 ? \"block\" : \"none\" }}>\r\n                            <h2 className=\"player4color\">\r\n                                {myTurn(3)}\r\n                                {props.players[3].name} (Square {props.players[3].position + 1})</h2>\r\n                            <DrawnCard card={props.players[3].selectedCard}></DrawnCard>\r\n                        </div>\r\n                    </div>\r\n                    <img src={player1} id=\"player1\" alt=\"\" />\r\n                    <img src={player2} id=\"player2\" alt=\"\" />\r\n                    <img src={player3} id=\"player3\" style={{ display: props.playerCount > 2 ? \"block\" : \"none\" }} alt=\"\" />\r\n                    <img src={player4} id=\"player4\" style={{ display: props.playerCount > 3 ? \"block\" : \"none\" }} alt=\"\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\nexport default Game;","import React, { ReactChild, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Player } from './constants_funcs';\r\n\r\ninterface NewGameProps {\r\n    players: Array<Player>,\r\n    playerCount: number,\r\n    setPlayerCount: (count: number) => void;\r\n    setPlayers: (names: string[]) => void;\r\n    children?: ReactChild;\r\n}\r\n\r\nconst NewGame: React.FC<NewGameProps> = (props) => {\r\n    const [playersReady, setPlayersReady] = useState(false);\r\n    const [playerCount, _setPlayerCount] = useState(props.playerCount);\r\n    const [players, setPlayers] = useState(props.players);\r\n\r\n    if (playersReady) {\r\n        return (<Redirect to=\"/game\"></Redirect>);\r\n    }\r\n\r\n    function startGame(): void {\r\n        const [player1, player2, player3, player4] = players;\r\n\r\n        player1.position = 0;\r\n        player2.position = 0;\r\n        player3.position = 0;\r\n        player4.position = 0;\r\n\r\n        setPlayers([player1, player2, player3, player4]);\r\n        setPlayersReady(true);\r\n    }\r\n\r\n    function updatePlayers(e: any) {\r\n        const _players = props.players.concat([]);\r\n        _players[e.currentTarget.id].name = e.currentTarget.value;\r\n        setPlayers(_players);\r\n    }\r\n\r\n    function setPlayerCount(e: any) {\r\n        const value = parseInt(e.target.value, 10);\r\n        props.setPlayerCount(value);\r\n        _setPlayerCount(value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-field\">\r\n                <label>Number of Players</label>\r\n                <select value={props.playerCount || playerCount} onChange={setPlayerCount}>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-field\">\r\n                <label>Player 1 Name:</label>\r\n                <input type=\"text\" name=\"player1name\" id=\"0\" value={players[0].name} onChange={updatePlayers}></input>\r\n            </div>\r\n            <div className=\"form-field\">\r\n                <label>Player 2 Name:</label>\r\n                <input type=\"text\" name=\"player2name\" id=\"1\" value={players[1].name} onChange={updatePlayers}></input>\r\n            </div>\r\n            <div className=\"form-field\">\r\n                <label>Player 3 Name:</label>\r\n                <input type=\"text\" disabled={playerCount < 3} id=\"2\" name=\"player3name\" value={players[2].name} onChange={updatePlayers}></input>\r\n            </div>\r\n            <div className=\"form-field\">\r\n                <label>Player 4 Name:</label>\r\n                <input type=\"text\" disabled={playerCount < 4} id=\"3\" name=\"player4name\" value={players[3].name} onChange={updatePlayers}></input>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <button type=\"button\" className=\"start\" onClick={startGame}>Start</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewGame;","import React, { ReactChild } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface GameOverProps {\r\n    winner: string,\r\n    setGameOver: (over: boolean) => void,\r\n    children?: ReactChild;\r\n}\r\n\r\nconst GameOver: React.FC<GameOverProps> = (props) => {\r\n    props.setGameOver(false);\r\n\r\n    if (!props.winner)\r\n    {\r\n        return (<Redirect to=\"/\"></Redirect>);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Game Over!</h3>\r\n            <h1>🍬🍬🍬🍬 Congratulations, {props.winner} 🍭🍭🍭🍭</h1>\r\n            <Link to=\"/\">New Game</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameOver;","export type SquareType =\r\n    | \"red\"\r\n    | \"green\"\r\n    | \"purple\"\r\n    | \"yellow\"\r\n    | \"blue\"\r\n    | \"orange\"\r\n    | \"cupcake\"\r\n    | \"lollipop\"\r\n    | \"icecream\"\r\n    | \"gummy\"\r\n    | \"cookie\"\r\n    | \"popsicle\"\r\n    | \"chocolate\"\r\n    | \"end\";\r\nexport type CardType = \"double-red\" | \"double-green\" | \"double-purple\" | \"double-yellow\" | \"double-blue\" | \"double-orange\";\r\n\r\nexport interface Square {\r\n    type: SquareType;\r\n    jumpTo?: number;\r\n    left: number;\r\n    top: number;\r\n}\r\n\r\nexport type Card = {\r\n    type: SquareType | CardType;\r\n} | null;\r\n\r\nexport interface Player {\r\n    name: string;\r\n    position: number;\r\n    selectedCard: Card;\r\n}\r\n\r\nexport const boardMatrix: Array<Square> = [\r\n    { type: \"red\", top: 945, left: 110 },\r\n    { type: \"purple\", top: 952, left: 146 },\r\n    { type: \"yellow\", top: 940, left: 185 },\r\n    { type: \"blue\", jumpTo: 59, top: 903, left: 208 },\r\n    { type: \"orange\", top: 864, left: 211 },\r\n    { type: \"green\", top: 836, left: 232 },\r\n    { type: \"red\", top: 818, left: 258 },\r\n    { type: \"purple\", top: 809, left: 302 },\r\n    { type: \"cupcake\", top: 817, left: 343 },\r\n    { type: \"yellow\", top: 842, left: 376 },\r\n    { type: \"blue\", top: 876, left: 402 },\r\n    { type: \"orange\", top: 908, left: 428 },\r\n    { type: \"green\", top: 935, left: 458 },\r\n    { type: \"red\", top: 948, left: 495 },\r\n    { type: \"purple\", top: 956, left: 525 },\r\n    { type: \"yellow\", top: 936, left: 545 },\r\n    { type: \"blue\", top: 900, left: 556 },\r\n    { type: \"orange\", top: 872, left: 544 },\r\n    { type: \"green\", top: 850, left: 511 },\r\n    { type: \"icecream\", top: 813, left: 486 },\r\n    { type: \"red\", top: 792, left: 447 },\r\n    { type: \"purple\", top: 780, left: 404 },\r\n    { type: \"yellow\", top: 757, left: 365 },\r\n    { type: \"blue\", top: 718, left: 359 },\r\n    { type: \"orange\", top: 685, left: 379 },\r\n    { type: \"green\", top: 677, left: 415 },\r\n    { type: \"red\", top: 681, left: 461 },\r\n    { type: \"purple\", top: 705, left: 497 },\r\n    { type: \"yellow\", jumpTo: 40, top: 732, left: 522 },\r\n    { type: \"blue\", top: 763, left: 550 },\r\n    { type: \"orange\", top: 788, left: 581 },\r\n    { type: \"green\", top: 801, left: 615 },\r\n    { type: \"red\", top: 803, left: 652 },\r\n    { type: \"purple\", top: 791, left: 689 },\r\n    { type: \"yellow\", top: 752, left: 716 },\r\n    { type: \"blue\", top: 711, left: 724 },\r\n    { type: \"orange\", top: 672, left: 718 },\r\n    { type: \"green\", top: 635, left: 702 },\r\n    { type: \"red\", top: 614, left: 666 },\r\n    { type: \"purple\", top: 591, left: 628 },\r\n    { type: \"yellow\", top: 581, left: 586 },\r\n    { type: \"gummy\", top: 580, left: 544 },\r\n    { type: \"blue\", top: 579, left: 502 },\r\n    { type: \"orange\", top: 579, left: 458 },\r\n    { type: \"green\", jumpTo: 0, top: 595, left: 415 },\r\n    { type: \"red\", top: 609, left: 375 },\r\n    { type: \"purple\", top: 630, left: 352 },\r\n    { type: \"yellow\", top: 662, left: 326 },\r\n    { type: \"blue\", top: 694, left: 302 },\r\n    { type: \"orange\", top: 724, left: 271 },\r\n    { type: \"green\", top: 753, left: 242 },\r\n    { type: \"red\", top: 776, left: 212 },\r\n    { type: \"purple\", top: 796, left: 179 },\r\n    { type: \"yellow\", top: 808, left: 145 },\r\n    { type: \"blue\", top: 811, left: 105 },\r\n    { type: \"orange\", top: 797, left: 67 },\r\n    { type: \"green\", top: 771, left: 26 },\r\n    { type: \"red\", top: 728, left: 27 },\r\n    { type: \"purple\", top: 690, left: 41 },\r\n    { type: \"yellow\", top: 662, left: 66 },\r\n    { type: \"blue\", top: 651, left: 113 },\r\n    { type: \"orange\", top: 651, left: 156 },\r\n    { type: \"green\", top: 663, left: 198 },\r\n    { type: \"red\", top: 665, left: 234 },\r\n    { type: \"purple\", top: 653, left: 268 },\r\n    { type: \"yellow\", top: 626, left: 294 },\r\n    { type: \"blue\", top: 590, left: 305 },\r\n    { type: \"orange\", top: 549, left: 290 },\r\n    { type: \"cookie\", top: 541, left: 251 },\r\n    { type: \"green\", top: 533, left: 210 },\r\n    { type: \"red\", top: 527, left: 170 },\r\n    { type: \"purple\", top: 490, left: 144 },\r\n    { type: \"yellow\", top: 453, left: 142 },\r\n    { type: \"blue\", top: 415, left: 162 },\r\n    { type: \"orange\", top: 387, left: 192 },\r\n    { type: \"green\", jumpTo: 0, top: 370, left: 222 },\r\n    { type: \"red\", top: 354, left: 266 },\r\n    { type: \"purple\", top: 351, left: 306 },\r\n    { type: \"yellow\", top: 353, left: 350 },\r\n    { type: \"blue\", top: 371, left: 390 },\r\n    { type: \"orange\", top: 408, left: 407 },\r\n    { type: \"green\", top: 445, left: 406 },\r\n    { type: \"red\", top: 481, left: 400 },\r\n    { type: \"purple\", top: 517, left: 418 },\r\n    { type: \"yellow\", top: 527, left: 461 },\r\n    { type: \"blue\", top: 534, left: 499 },\r\n    { type: \"orange\", top: 540, left: 538 },\r\n    { type: \"green\", top: 541, left: 574 },\r\n    { type: \"red\", top: 538, left: 611 },\r\n    { type: \"purple\", top: 530, left: 648 },\r\n    { type: \"yellow\", top: 513, left: 681 },\r\n    { type: \"lollipop\", top: 479, left: 711 },\r\n    { type: \"blue\", top: 442, left: 719 },\r\n    { type: \"orange\", top: 418, left: 685 },\r\n    { type: \"green\", top: 416, left: 642 },\r\n    { type: \"red\", top: 404, left: 601 },\r\n    { type: \"purple\", top: 385, left: 566 },\r\n    { type: \"yellow\", top: 352, left: 573 },\r\n    { type: \"blue\", top: 322, left: 598 },\r\n    { type: \"orange\", top: 292, left: 609 },\r\n    { type: \"green\", top: 254, left: 604 },\r\n    { type: \"popsicle\", top: 215, left: 627 },\r\n    { type: \"red\", top: 181, left: 623 },\r\n    { type: \"purple\", top: 175, left: 573 },\r\n    { type: \"yellow\", top: 186, left: 527 },\r\n    { type: \"blue\", top: 210, left: 499 },\r\n    { type: \"orange\", top: 239, left: 471 },\r\n    { type: \"green\", top: 268, left: 436 },\r\n    { type: \"red\", top: 290, left: 402 },\r\n    { type: \"purple\", top: 301, left: 361 },\r\n    { type: \"yellow\", top: 311, left: 318 },\r\n    { type: \"blue\", top: 310, left: 269 },\r\n    { type: \"orange\", top: 320, left: 230 },\r\n    { type: \"green\", top: 337, left: 193 },\r\n    { type: \"red\", top: 358, left: 160 },\r\n    { type: \"purple\", top: 371, left: 125 },\r\n    { type: \"chocolate\", top: 361, left: 84 },\r\n    { type: \"blue\", top: 332, left: 48 },\r\n    { type: \"orange\", top: 300, left: 34 },\r\n    { type: \"green\", top: 257, left: 32 },\r\n    { type: \"red\", top: 219, left: 40 },\r\n    { type: \"purple\", top: 185, left: 54 },\r\n    { type: \"yellow\", top: 161, left: 68 },\r\n    { type: \"blue\", top: 140, left: 93 },\r\n    { type: \"orange\", top: 132, left: 136 },\r\n    { type: \"green\", top: 136, left: 174 },\r\n    { type: \"red\", top: 172, left: 187 },\r\n    { type: \"purple\", top: 204, left: 194 },\r\n    { type: \"yellow\", top: 239, left: 201 },\r\n    { type: \"blue\", top: 260, left: 232 },\r\n    { type: \"orange\", top: 269, left: 277 },\r\n    { type: \"green\", top: 254, left: 310 },\r\n    { type: \"end\", top: 184, left: 356 },\r\n];\r\n\r\nexport function createDeck() {\r\n    const gameCards: Array<Card> = [];\r\n    const colors: Array<SquareType> = [\"red\", \"purple\", \"yellow\", \"blue\", \"orange\", \"green\"];\r\n    colors.forEach(color => {\r\n        gameCards.push({ type: color });\r\n        gameCards.push({ type: color });\r\n        gameCards.push({ type: color });\r\n        gameCards.push({ type: color });\r\n        gameCards.push({ type: color });\r\n        gameCards.push({ type: color });\r\n    });\r\n\r\n    const doubles: Array<CardType> = [\"double-red\", \"double-purple\", \"double-yellow\", \"double-blue\", \"double-orange\", \"double-green\"];\r\n    doubles.forEach(double => {\r\n        gameCards.push({ type: double });\r\n        gameCards.push({ type: double });\r\n        gameCards.push({ type: double });\r\n        gameCards.push({ type: double });\r\n    });\r\n\r\n    gameCards.push({ type: \"cupcake\" });\r\n    gameCards.push({ type: \"lollipop\" });\r\n    gameCards.push({ type: \"icecream\" });\r\n    gameCards.push({ type: \"gummy\" });\r\n    gameCards.push({ type: \"cookie\" });\r\n    gameCards.push({ type: \"popsicle\" });\r\n    gameCards.push({ type: \"chocolate\" });\r\n\r\n    return gameCards;\r\n}\r\n\r\nexport function shuffle(array: Array<Card>) {\r\n    var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function isColor(type: string) {\r\n    return type === \"red\" || type === \"purple\" || type === \"yellow\" || type === \"blue\" || type === \"orange\" || type === \"green\";\r\n}\r\n\r\nexport function getSearchStartPosition(type: string, fallbackPosition: number) {\r\n    // we'll just return the known index (-1) since our board is static\r\n    if (type === \"lollipop\") {\r\n        return 90;\r\n    }\r\n    if (type === \"cookie\") {\r\n        return 67;\r\n    }\r\n    if (type === \"cupcake\") {\r\n        return 7;\r\n    }\r\n    if (type === \"icecream\") {\r\n        return 18;\r\n    }\r\n    if (type === \"gummy\") {\r\n        return 40;\r\n    }\r\n    if (type === \"popsicle\") {\r\n        return 99;\r\n    }\r\n    if (type === \"chocolate\") {\r\n        return 114;\r\n    }\r\n\r\n    // always ensure we return 0 or greater for the board index\r\n    return fallbackPosition >= 0 ? fallbackPosition : 0;\r\n}\r\n\r\nexport function hasJumpTo(square: Square) {\r\n    if (!square) {\r\n        return false;\r\n    }\r\n    // this is a language quirk\r\n    // if we do (square.jumpTo && square.jumpTo >=0)\r\n    // square.jumpTo being 0 will cause it to be \"falsy\"\r\n    // so we do it this way\r\n    if (\"\" + square.jumpTo && square.jumpTo! >= 0) return true;\r\n    return false;\r\n}\r\n\r\nexport function movePlayerOnScreen(playerIndex: number, top: number, left: number) {\r\n    const el = document.getElementById('player' + (playerIndex + 1));\r\n    el!.style.top = (top + (playerIndex * 2) - 35) + 'px';\r\n    el!.style.left = left + 'px';\r\n  }","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './App.css';\nimport Game from './Game';\nimport NewGame from './NewGame';\nimport GameOver from './GameOver';\nimport { Card, Player, Square, createDeck, getSearchStartPosition, boardMatrix, movePlayerOnScreen, hasJumpTo, shuffle } from './constants_funcs';\n\nconst App: React.FC = () => {\n  // local properties\n  const gameCards: Array<Card> = createDeck();\n\n  // state of this control\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState<string>('');\n  const [deck, setDeck] = useState<Array<Card>>(shuffle(gameCards.concat([])));\n  const [playerCount, setPlayerCount] = useState(4);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [players, _setPlayers] = useState<Array<Player>>([\n    { name: 'Player 1', position: -1, selectedCard: null },\n    { name: 'Player 2', position: -1, selectedCard: null },\n    { name: 'Player 3', position: -1, selectedCard: null },\n    { name: 'Player 4', position: -1, selectedCard: null },\n  ]);\n\n  function movePlayer(_players: Array<Player>) {\n    // find the next position for current player\n    const currentPlayersCard = _players[currentPlayer].selectedCard;\n    // we will start at the next square\n    let position = _players[currentPlayer].position + 1;\n    // if it's a double card, just get the color \n    let cardType = currentPlayersCard!.type.startsWith('double') ? currentPlayersCard!.type.split('double-')[1] : currentPlayersCard!.type;\n    // most moves are 1, doubles are 2\n    let numberOfMoves = currentPlayersCard!.type.startsWith('double') ? 2 : 1;\n\n    // candy cards are a special situation, we could\n    // possibly go backwards, so we need to adjust our starting position back/forward\n    let startSearchPosition = getSearchStartPosition(currentPlayersCard!.type, position);\n    let newSquare: Square;\n\n    while (numberOfMoves > 0) {\n      let i = startSearchPosition;\n\n      // walk the board starting at our starting position \n      for (; i < boardMatrix.length; i++) {\n        newSquare = boardMatrix[i];\n\n        // if they match or they hit the end\n        if (newSquare.type === cardType\n            || newSquare.type === 'end') {\n          // this is our new position\n          position = i;\n          // make sure to also advance our start by 1 in case of double\n          startSearchPosition = position + 1;\n          // we have our square, no need to continue looking at the board\n          break;\n        }\n      }\n\n      // we've processed a move\n      numberOfMoves--;\n    }\n\n    // the index is the length of our board\n    // then the game is over\n    if (position >= boardMatrix.length -1) {\n      // move the player on screen\n      movePlayerOnScreen(currentPlayer, newSquare!.top, newSquare!.left);\n      setWinner(players[currentPlayer].name);\n      setTimeout(() => setGameOver(true), 4000);\n      return;\n    }\n\n    // do we need to jump to another square from here?\n    const jumpTo = (hasJumpTo(newSquare!))\n      ? newSquare!.jumpTo!\n      : -1;\n\n    // set the player's internal position\n    _players[currentPlayer].position = (jumpTo > -1)\n      ? jumpTo\n      : position;\n\n    movePlayerOnScreen(currentPlayer, newSquare!.top, newSquare!.left);\n\n    if (jumpTo > -1) {\n      // they're jumping change the square\n      newSquare = boardMatrix[jumpTo];\n\n      // then jump to where they end up\n      // after the animation has finished in 2 sec\n      setTimeout(() => {\n        movePlayerOnScreen(currentPlayer, newSquare!.top, newSquare!.left);\n      }, 2000);\n    }\n  }\n\n  function setPlayerCard(card: Card) {\n    // set the players card\n    const _players = players.concat([]);\n    _players[currentPlayer].selectedCard = card;\n\n    // move player\n    movePlayer(_players);\n    _setPlayers(_players);\n\n    if (gameOver) { return; }\n\n    let nextPlayer = currentPlayer + 1;\n    if (nextPlayer >= playerCount) { nextPlayer = 0; }\n    setCurrentPlayer(nextPlayer);\n  }\n\n  // when the user clicks the draw card button\n  function drawCard() {\n    // pick a random index in the deck of cards remaining\n    const randomIndex = Math.floor(Math.random() * deck.length);\n    console.log(`Selected card index ${randomIndex}`);\n\n    // construct a copy of the deck\n    const tmpDeck = deck.concat([]);\n    // remove the card drawn\n    tmpDeck.splice(randomIndex, 1);\n\n    console.log(deck[randomIndex]);\n    console.log(`${tmpDeck.length} cards remaining`);\n\n    // set he current players drawn card\n    setPlayerCard(deck[randomIndex]);\n\n    // if we're out of cards (this is the last card)\n    if (deck.length === 1) {\n      console.log('Deck exhausted, shufffling');\n      setDeck(shuffle(gameCards.concat([])));\n    } else {\n      // otherwise set our active deck to our temp deck (where we removed the drawn card)\n      setDeck(tmpDeck);\n    }\n  }\n\n  // When the user updates the player names\n  function setPlayers(names: string[]) {\n    _setPlayers([\n      { name: names[0], position: -1, selectedCard: null },\n      { name: names[1], position: -1, selectedCard: null },\n      { name: names[2], position: -1, selectedCard: null },\n      { name: names[3], position: -1, selectedCard: null },\n    ]);\n    // since they only update players on the main page\n    // we reset the winner in case they came from the game over page\n    setWinner('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>\n        🍬🍬 TES Candyland!! 🍭🍭\n        <small>\n          <a href=\"https://shop.hasbro.com/en-us/product/candy-land-game:C4E461C2-5056-9047-F5F7-F005920A3999\">Candyland</a> is published by Hasbro. This is an educational parody/tool.\n        </small>\n      </h1>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <NewGame players={players} setPlayers={setPlayers} setPlayerCount={setPlayerCount} playerCount={playerCount}></NewGame>\n          </Route>\n          <Route path=\"/game\">\n            <div>HI!</div>\n            <Game winner={winner} currentPlayer={currentPlayer} gameOver={gameOver} drawCard={drawCard} players={players} playerCount={playerCount}></Game>\n          </Route>\n          <Route path=\"/gameover\">\n            <GameOver winner={winner} setGameOver={setGameOver}></GameOver>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}